@import 'variables.scss';



@keyframes animateIn {
  0% {
    opacity: 0;
    transform: scale(0.6) translateY(-8px);
  }
  
  100% {
    opacity: 1;
  }
}

@keyframes disappear {
  0% {
    opacity: 1;
  }
  99% {
    opacity: 0;
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}





@mixin standard-font {
    font-style: normal;
    line-height: normal;
}

@mixin fonctionnement-number {
    align-items: center;
    display: flex;
    height: 10px;
    width: 10px;
    position: relative;
    right: 13px;
    justify-content: center;
    color: $white-txt;
    padding: 0.5em;
    border-radius: 25px;
    background-color: $primary;
}

@mixin flex-col {
    display: flex;
    flex-direction: column;
}

@mixin flex-row {
    display: flex;
    flex-direction: row;
}


@mixin heart-animation {
.heart{
  .heart-activate {
    opacity: 0;
    transform: scale(0);
    transition: 0.1s ease-in-out;
    
  }
  &:hover {
    .heart-activate {
      opacity: 1;
      transform: scale(1.2);
      transition: 0.1s ease-in-out;
      color: transparent;
      cursor: pointer;
      
    }
  }
  input:checked + label .heart-activate {
    opacity: 1;
    transform: scale(1.2);
    color: transparent;
  }
  }
}

@mixin loader-object {

.loader-object {
  width: 64px;
  height: 48px;
  display: flex;
  position: relative;
  animation: split 0.6s linear infinite alternate;
}
.loader-object::before , .loader-object::after {
  content: '';
  position: absolute;
  height: 48px;
  width: 48px;
  border-radius: 50%;
  left: 0;
  top: 0;
  transform: translateX(-10px);
  background: $primary;
  opacity: 0.75;
  backdrop-filter: blur(20px);
}

.loader-object::after {
  left: auto;
  right: 0;
  background: #FFF;
  transform: translateX(10px);
}

@keyframes split {
  0% {
    width: 0px;
  }
  50% {
    width: 64px;
  }
  100% {
    width: 148px;
  }
}

}
  




@mixin heart-background {
  .heart-arctivate, .fa-heart:before {
    background: $heart-gradient;
    -webkit-background-clip: text;
  }
}

@mixin open-animation {
  @for $i from 1 through 5 {
    &:nth-child(#{$i}) {
      animation-delay: 100ms * $i;
    }
  }
  animation-name: animateIn;
  animation-duration: 350ms;
  animation-delay: calc(var(--animation-order) * 100ms);
  animation-fill-mode: both;
  animation-timing-function: ease-in-out;
}